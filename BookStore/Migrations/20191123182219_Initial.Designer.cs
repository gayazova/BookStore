// <auto-generated />
using System;
using BookStore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookStore.Migrations
{
    [DbContext(typeof(BookStoreContext))]
    [Migration("20191123182219_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookStore.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("BookStore.Models.Basket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost")
                        .HasColumnType("money");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Basket");
                });

            modelBuilder.Entity("BookStore.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Number");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("PublicationYear");

                    b.Property<string>("PublishingHouse")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("BookStore.Models.BookAuthor", b =>
                {
                    b.Property<int>("BookId");

                    b.Property<int>("AuthorId");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime");

                    b.HasKey("BookId", "AuthorId");

                    b.HasIndex("AuthorId");

                    b.ToTable("BookAuthor");
                });

            modelBuilder.Entity("BookStore.Models.BookGenre", b =>
                {
                    b.Property<int>("BookId");

                    b.Property<int>("GenreId");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime");

                    b.HasKey("BookId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenre");
                });

            modelBuilder.Entity("BookStore.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Patronomic")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("BookStore.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("BookStore.Models.Good", b =>
                {
                    b.Property<int>("BookId");

                    b.Property<int>("BasketId");

                    b.Property<decimal>("Cost")
                        .HasColumnType("money");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Number");

                    b.HasKey("BookId", "BasketId");

                    b.HasIndex("BasketId");

                    b.ToTable("Good");
                });

            modelBuilder.Entity("BookStore.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BasketId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("EmployeeId");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Purchase");
                });

            modelBuilder.Entity("BookStore.Models.BookAuthor", b =>
                {
                    b.HasOne("BookStore.Models.Author", "Author")
                        .WithMany("BookAuthor")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("FK__BookAutho__Autho__45F365D3");

                    b.HasOne("BookStore.Models.Book", "Book")
                        .WithMany("BookAuthor")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK__BookAutho__BookI__46E78A0C");
                });

            modelBuilder.Entity("BookStore.Models.BookGenre", b =>
                {
                    b.HasOne("BookStore.Models.Book", "Book")
                        .WithMany("BookGenre")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK__BookGenre__BookI__47DBAE45");

                    b.HasOne("BookStore.Models.Genre", "Genre")
                        .WithMany("BookGenre")
                        .HasForeignKey("GenreId")
                        .HasConstraintName("FK__BookGenre__Genre__48CFD27E");
                });

            modelBuilder.Entity("BookStore.Models.Good", b =>
                {
                    b.HasOne("BookStore.Models.Basket", "Basket")
                        .WithMany("Good")
                        .HasForeignKey("BasketId")
                        .HasConstraintName("FK__Good__BasketId__49C3F6B7");

                    b.HasOne("BookStore.Models.Book", "Book")
                        .WithMany("Good")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK__Good__BookId__4AB81AF0");
                });

            modelBuilder.Entity("BookStore.Models.Purchase", b =>
                {
                    b.HasOne("BookStore.Models.Basket", "Basket")
                        .WithMany("Purchase")
                        .HasForeignKey("BasketId")
                        .HasConstraintName("FK__Purchase__Basket__4BAC3F29");

                    b.HasOne("BookStore.Models.Employee", "Employee")
                        .WithMany("Purchase")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__Purchase__Employ__4CA06362");
                });
#pragma warning restore 612, 618
        }
    }
}
